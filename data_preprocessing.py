# -*- coding: utf-8 -*-
"""data-preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tGEqUOB3geLFkBQBeZ-JtC4-CUwT3_pd
"""

import warnings; warnings.simplefilter('ignore')
from sklearn.preprocessing import StandardScaler
import numpy as np
import pandas as pd
def feature_engineer(df):
    df.loc[~df['state'].isin(['FIN', 'INT', 'CON', 'REQ', 'RST']), 'state'] = 'others'
    df.loc[~df['service'].isin(['-', 'dns', 'http', 'smtp', 'ftp-data', 'ftp', 'ssh', 'pop3']), 'service'] = 'others'
    df.loc[df['proto'].isin(['igmp', 'icmp', 'rtp']), 'proto'] = 'igmp_icmp_rtp'
    df.loc[~df['proto'].isin(['tcp', 'udp', 'arp', 'ospf', 'igmp_icmp_rtp']), 'proto'] = 'others'
    return df

def get_cat_columns(train):
    categorical = []
    for col in train.columns:
        if train[col].dtype == 'object':
            categorical.append(col)
    return categorical

def preprocessing():
    train = pd.read_csv('/content/drive/MyDrive/Dataset/UNSW_NB15_training-set.csv')

    drop_columns = ['attack_cat', 'id'] + ['response_body_len', 'spkts', 'ct_flw_http_mthd', 'trans_depth', 'dwin', 'ct_ftp_cmd', 'is_ftp_login']
    for col in drop_columns:
        if col in train.columns:
            train.drop([col], axis=1, inplace=True)
    x_train, y_train = train.drop(['label'], axis=1), train['label']
    x_train = feature_engineer(x_train)
    categorical_columns = get_cat_columns(x_train)
    non_categorical_columns = [x for x in x_train.columns if x not in categorical_columns]

    scaler = StandardScaler()
    x_train[non_categorical_columns] = scaler.fit_transform(x_train[non_categorical_columns])

    x_train = pd.get_dummies(x_train)
    features = list(set(x_train.columns))

    x_train = x_train[features]
    x_train['label'] = y_train
    return x_train